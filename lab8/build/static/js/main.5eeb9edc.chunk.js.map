{"version":3,"sources":["context.js","Todo/TodoItem.jsx","Todo/TodoList.jsx","Todo/AddTodo.jsx","App.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","index","onChange","removeTodo","useContext","useState","title","todoEdit","setTodoEdit","classes","todoEditInput","completed","push","className","join","type","checked","id","value","e","target","onClick","bind","TodoList","props","todos","map","onToggle","AddTodo","onCreate","setValue","onSubmit","event","preventDefault","trim","App","setTodos","Provider","filter","editTodo","newTitle","concat","Date","now","length","ReactDOM","render","document","getElementById"],"mappings":"qOAEeA,G,MADCC,IAAMC,iB,OCGP,SAASC,EAAT,GAA8C,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrCC,EAAcC,qBAAWR,GAAzBO,WADiD,EAExBE,mBAASL,EAAKM,OAFU,mBAEjDC,EAFiD,KAEvCC,EAFuC,KAGlDC,EAAS,GACTC,EAAe,CAAC,YAMtB,OAJGV,EAAKW,YACJF,EAAQG,KAAK,QACbF,EAAcE,KAAK,SAGnB,qBAAIC,UAAU,OAAd,UACA,uBAAMA,UAAWJ,EAAQK,KAAK,KAA9B,UACI,uBAAOC,KAAK,WAAWC,QAAShB,EAAKW,UACjCT,SAAY,kBAAMA,EAASF,EAAKiB,OACpC,iCAAShB,EAAM,IAHnB,OAKI,uBAAOK,MAAM,iFAAgBO,UAAWH,EAAcI,KAAK,KAAMC,KAAK,OACnEG,MAAOX,EAAUL,SAAU,SAACiB,GAAD,OAAOX,EAAYW,EAAEC,OAAOF,aAE9D,wBAAQG,QAASlB,EAAWmB,KAAK,KAAKtB,EAAKiB,IAAKJ,UAAU,iBAA1D,qB,MCpBO,SAASU,EAASC,GAC7B,OAAS,oBAAIX,UAAU,WAAd,SACRW,EAAMC,MAAMC,KAAI,SAAC1B,EAAMC,GACxB,OAAO,cAAC,EAAD,CAAUD,KAAMA,EAAoBC,MAAOA,EAAOC,SAAUsB,EAAMG,UAAvC3B,EAAKiB,S,MCe5BW,MAnBf,YAA6B,IAAXC,EAAU,EAAVA,SAAU,EACExB,mBAAS,IADX,mBACjBa,EADiB,KACVY,EADU,KAWxB,OACA,uBAAMjB,UAAU,cAAckB,SAT9B,SAAuBC,GACnBA,EAAMC,iBACHf,EAAMgB,SACLL,EAASX,GACTY,EAAS,MAKjB,UACI,uBAAOZ,MAAOA,EAAOhB,SAAU,SAAA8B,GAAK,OAAIF,EAASE,EAAMZ,OAAOF,UAC9D,wBAAQH,KAAK,SAASF,UAAU,gBAAhC,0BCmCOsB,MA/Cf,WAAgB,IAAD,EACetC,IAAMQ,SAAS,IAD9B,mBACJoB,EADI,KACGW,EADH,KAkCX,OAAS,eAAC,EAAQC,SAAT,CAAkBnB,MAAS,CAAEf,WAFtC,SAAoBc,GAAMmB,EAASX,EAAMa,QAAO,SAAAtC,GAAI,OAAIA,EAAKiB,KAAOA,OAElBsB,SAxBlD,SAAkBtB,EAAIuB,GAClBJ,EACIX,EAAMC,KAAI,SAAC1B,GAIP,OAHIA,EAAKiB,KAAOA,IACZjB,EAAKM,MAAQkC,GAEVxC,QAkBV,UACL,sBAAKa,UAAY,UAAjB,UACA,gDAEA,cAAC,EAAD,CAASgB,SAjBb,SAAoBvB,GAChB8B,EACIX,EAAMgB,OAAO,CAAC,CACVnC,QACAW,GAAIyB,KAAKC,MACThC,WAAW,SASnB,KAIAc,EAAMmB,OAAS,cAAE,EAAF,CAAWnB,MAAUA,EACpCE,SArCJ,SAAoBV,GAChBmB,EAASX,EAAMC,KAAI,SAAA1B,GAEf,OADIA,EAAKiB,KAAOA,IAAMjB,EAAKW,WAAaX,EAAKW,WACtCX,SAkCoB,yDAN1B,SChCb6C,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5eeb9edc.chunk.js","sourcesContent":["import React from 'react';\r\nconst Context = React.createContext();\r\nexport default Context","import React, {useState,useContext} from 'react';\r\nimport './TodoItem.css';\r\nimport Context from \"../context\";\r\n\r\nexport default function TodoItem( {todo, index, onChange} ) {\r\n    const {removeTodo} = useContext(Context);\r\n    const [todoEdit, setTodoEdit] = useState(todo.title);\r\n    const classes =[];\r\n    const todoEditInput =[\"editTodo\"];\r\n\r\n    if(todo.completed){\r\n        classes.push(\"done\");\r\n        todoEditInput.push(\"done\");\r\n    }\r\n    return ( \r\n        <li className=\"todo\"> \r\n        <span className={classes.join(' ')}>\r\n            <input type=\"checkbox\" checked={todo.completed} \r\n                onChange = {() => onChange(todo.id)} />\r\n            <strong>{index+1}</strong>\r\n            &nbsp;\r\n            <input title=\"Редактировать\" className={todoEditInput.join(' ')} type=\"text\"\r\n               value={todoEdit} onChange={(e) => setTodoEdit(e.target.value)} />\r\n        </span>\r\n        <button onClick={removeTodo.bind(null,todo.id)} className=\"todoItemButton\">&times;</button>\r\n\r\n        </li>  \r\n    );\r\n}","import React from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport './TodoList.css';\r\n\r\nexport default function TodoList(props) {\r\n    return ( <ul className=\"todolist\">\r\n    {props.todos.map((todo, index) =>{\r\n    return <TodoItem todo={todo} key={todo.id} index={index} onChange={props.onToggle} /> \r\n    })}\r\n        \r\n\r\n    </ul> );\r\n}","import React, {useState} from 'react';\r\nimport './AddTodo.css';\r\n\r\nfunction AddTodo({onCreate}){\r\n    const [value, setValue] = useState('');\r\n\r\n    function SubmitHandler(event){\r\n        event.preventDefault();\r\n        if(value.trim()){\r\n            onCreate(value);\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n    <form className=\"addTodoForm\" onSubmit={SubmitHandler}>\r\n        <input value={value} onChange={event => setValue(event.target.value)} />\r\n        <button type=\"submit\" className=\"addTodoButton\">Add todo</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo","import React from 'react';\r\nimport TodoList from \"./Todo/TodoList.jsx\";\r\nimport Context from \"./context\";\r\nimport AddTodo from \"./Todo/AddTodo.jsx\";\r\n\r\nfunction App() {\r\n    const [todos, setTodos] = React.useState([]);\r\n\r\n    function toggleTodo(id) {\r\n        setTodos(todos.map(todo => {\r\n            if (todo.id === id) { todo.completed = !todo.completed }\r\n            return todo;\r\n        }))\r\n    }\r\n\r\n    function editTodo(id, newTitle) {\r\n        setTodos(\r\n            todos.map((todo) => {\r\n                if (todo.id === id) {\r\n                    todo.title = newTitle;\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n    }\r\n\r\n    function createTodo(title) {\r\n        setTodos(\r\n            todos.concat([{\r\n                title,\r\n                id: Date.now(),\r\n                completed: false,\r\n            }, ])\r\n        );\r\n    }\r\n\r\n\r\n    function removeTodo(id) { setTodos(todos.filter(todo => todo.id !== id)) }\r\n\r\n    return ( <Context.Provider value = {{ removeTodo, editTodo }} >\r\n        <div className = \"wrapper\" >\r\n        <h1> To - do list </h1>\r\n\r\n        <AddTodo onCreate = { createTodo } />  {\r\n        todos.length ? < TodoList todos = { todos }\r\n        onToggle = { toggleTodo } /> : <p>Nothing to do (Chill)</p >\r\n    }\r\n\r\n    </div>  </Context.Provider>\r\n);\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n//console.log('here');\r\nReactDOM.render( <App />, document.getElementById('root'));\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();"],"sourceRoot":""}